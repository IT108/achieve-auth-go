// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package auth_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignInRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInRequest) Reset()         { *m = SignInRequest{} }
func (m *SignInRequest) String() string { return proto.CompactTextString(m) }
func (*SignInRequest) ProtoMessage()    {}
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *SignInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInRequest.Unmarshal(m, b)
}
func (m *SignInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInRequest.Marshal(b, m, deterministic)
}
func (m *SignInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInRequest.Merge(m, src)
}
func (m *SignInRequest) XXX_Size() int {
	return xxx_messageInfo_SignInRequest.Size(m)
}
func (m *SignInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignInRequest proto.InternalMessageInfo

func (m *SignInRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SignInRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Token struct {
	Token                string               `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	TokenExpiration      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=TokenExpiration,proto3" json:"TokenExpiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Token) GetTokenExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.TokenExpiration
	}
	return nil
}

type RegisterRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Response struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type IsEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsEmailRequest) Reset()         { *m = IsEmailRequest{} }
func (m *IsEmailRequest) String() string { return proto.CompactTextString(m) }
func (*IsEmailRequest) ProtoMessage()    {}
func (*IsEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{4}
}

func (m *IsEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsEmailRequest.Unmarshal(m, b)
}
func (m *IsEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsEmailRequest.Marshal(b, m, deterministic)
}
func (m *IsEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsEmailRequest.Merge(m, src)
}
func (m *IsEmailRequest) XXX_Size() int {
	return xxx_messageInfo_IsEmailRequest.Size(m)
}
func (m *IsEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsEmailRequest proto.InternalMessageInfo

func (m *IsEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type IsEmailResponse struct {
	IsEmailRegistered    bool     `protobuf:"varint,1,opt,name=IsEmailRegistered,proto3" json:"IsEmailRegistered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsEmailResponse) Reset()         { *m = IsEmailResponse{} }
func (m *IsEmailResponse) String() string { return proto.CompactTextString(m) }
func (*IsEmailResponse) ProtoMessage()    {}
func (*IsEmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{5}
}

func (m *IsEmailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsEmailResponse.Unmarshal(m, b)
}
func (m *IsEmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsEmailResponse.Marshal(b, m, deterministic)
}
func (m *IsEmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsEmailResponse.Merge(m, src)
}
func (m *IsEmailResponse) XXX_Size() int {
	return xxx_messageInfo_IsEmailResponse.Size(m)
}
func (m *IsEmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsEmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsEmailResponse proto.InternalMessageInfo

func (m *IsEmailResponse) GetIsEmailRegistered() bool {
	if m != nil {
		return m.IsEmailRegistered
	}
	return false
}

type IsUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsUserRequest) Reset()         { *m = IsUserRequest{} }
func (m *IsUserRequest) String() string { return proto.CompactTextString(m) }
func (*IsUserRequest) ProtoMessage()    {}
func (*IsUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{6}
}

func (m *IsUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsUserRequest.Unmarshal(m, b)
}
func (m *IsUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsUserRequest.Marshal(b, m, deterministic)
}
func (m *IsUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsUserRequest.Merge(m, src)
}
func (m *IsUserRequest) XXX_Size() int {
	return xxx_messageInfo_IsUserRequest.Size(m)
}
func (m *IsUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsUserRequest proto.InternalMessageInfo

func (m *IsUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type IsUserResponse struct {
	IsUserRegistered     bool     `protobuf:"varint,1,opt,name=IsUserRegistered,proto3" json:"IsUserRegistered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsUserResponse) Reset()         { *m = IsUserResponse{} }
func (m *IsUserResponse) String() string { return proto.CompactTextString(m) }
func (*IsUserResponse) ProtoMessage()    {}
func (*IsUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{7}
}

func (m *IsUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsUserResponse.Unmarshal(m, b)
}
func (m *IsUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsUserResponse.Marshal(b, m, deterministic)
}
func (m *IsUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsUserResponse.Merge(m, src)
}
func (m *IsUserResponse) XXX_Size() int {
	return xxx_messageInfo_IsUserResponse.Size(m)
}
func (m *IsUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsUserResponse proto.InternalMessageInfo

func (m *IsUserResponse) GetIsUserRegistered() bool {
	if m != nil {
		return m.IsUserRegistered
	}
	return false
}

type IsRegisteredRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsRegisteredRequest) Reset()         { *m = IsRegisteredRequest{} }
func (m *IsRegisteredRequest) String() string { return proto.CompactTextString(m) }
func (*IsRegisteredRequest) ProtoMessage()    {}
func (*IsRegisteredRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{8}
}

func (m *IsRegisteredRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRegisteredRequest.Unmarshal(m, b)
}
func (m *IsRegisteredRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRegisteredRequest.Marshal(b, m, deterministic)
}
func (m *IsRegisteredRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRegisteredRequest.Merge(m, src)
}
func (m *IsRegisteredRequest) XXX_Size() int {
	return xxx_messageInfo_IsRegisteredRequest.Size(m)
}
func (m *IsRegisteredRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRegisteredRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsRegisteredRequest proto.InternalMessageInfo

func (m *IsRegisteredRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *IsRegisteredRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type IsRegisteredResponse struct {
	IsUserRegistered     bool     `protobuf:"varint,1,opt,name=IsUserRegistered,proto3" json:"IsUserRegistered,omitempty"`
	IsEmailRegistered    bool     `protobuf:"varint,2,opt,name=IsEmailRegistered,proto3" json:"IsEmailRegistered,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsRegisteredResponse) Reset()         { *m = IsRegisteredResponse{} }
func (m *IsRegisteredResponse) String() string { return proto.CompactTextString(m) }
func (*IsRegisteredResponse) ProtoMessage()    {}
func (*IsRegisteredResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{9}
}

func (m *IsRegisteredResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsRegisteredResponse.Unmarshal(m, b)
}
func (m *IsRegisteredResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsRegisteredResponse.Marshal(b, m, deterministic)
}
func (m *IsRegisteredResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsRegisteredResponse.Merge(m, src)
}
func (m *IsRegisteredResponse) XXX_Size() int {
	return xxx_messageInfo_IsRegisteredResponse.Size(m)
}
func (m *IsRegisteredResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsRegisteredResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsRegisteredResponse proto.InternalMessageInfo

func (m *IsRegisteredResponse) GetIsUserRegistered() bool {
	if m != nil {
		return m.IsUserRegistered
	}
	return false
}

func (m *IsRegisteredResponse) GetIsEmailRegistered() bool {
	if m != nil {
		return m.IsEmailRegistered
	}
	return false
}

func init() {
	proto.RegisterType((*SignInRequest)(nil), "auth_proto.SignInRequest")
	proto.RegisterType((*Token)(nil), "auth_proto.Token")
	proto.RegisterType((*RegisterRequest)(nil), "auth_proto.RegisterRequest")
	proto.RegisterType((*Response)(nil), "auth_proto.Response")
	proto.RegisterType((*IsEmailRequest)(nil), "auth_proto.IsEmailRequest")
	proto.RegisterType((*IsEmailResponse)(nil), "auth_proto.IsEmailResponse")
	proto.RegisterType((*IsUserRequest)(nil), "auth_proto.IsUserRequest")
	proto.RegisterType((*IsUserResponse)(nil), "auth_proto.IsUserResponse")
	proto.RegisterType((*IsRegisteredRequest)(nil), "auth_proto.IsRegisteredRequest")
	proto.RegisterType((*IsRegisteredResponse)(nil), "auth_proto.IsRegisteredResponse")
}

func init() {
	proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874)
}

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x53, 0x4b, 0x6f, 0xda, 0x40,
	0x10, 0x2e, 0xae, 0x40, 0x74, 0x28, 0xa5, 0x6c, 0x51, 0x45, 0xb7, 0x07, 0xd0, 0x1e, 0xaa, 0xaa,
	0xad, 0x8c, 0x44, 0x2f, 0x3d, 0x54, 0x42, 0x91, 0x82, 0x22, 0x2b, 0x52, 0x14, 0x19, 0x72, 0x46,
	0x06, 0x36, 0x8e, 0x15, 0xec, 0x75, 0xbc, 0x76, 0x92, 0xdf, 0x9e, 0x53, 0xec, 0x5d, 0xdb, 0x78,
	0x6d, 0x83, 0xc8, 0x6d, 0x66, 0xbe, 0x79, 0x7c, 0xf3, 0x02, 0xb0, 0xa2, 0xf0, 0x4e, 0xf7, 0x03,
	0x16, 0x32, 0x24, 0xe4, 0x95, 0x90, 0xf1, 0xc8, 0x66, 0xcc, 0xde, 0xd1, 0x89, 0xd0, 0xd6, 0xd1,
	0xed, 0x24, 0x74, 0x5c, 0xca, 0x43, 0xcb, 0xf5, 0xa5, 0x33, 0xb9, 0x80, 0xee, 0xc2, 0xb1, 0x3d,
	0xc3, 0x33, 0xe9, 0x43, 0x14, 0x23, 0x08, 0x43, 0xfb, 0x86, 0xd3, 0xc0, 0xb3, 0x5c, 0x3a, 0x6c,
	0x8c, 0x1b, 0x3f, 0x3f, 0x98, 0xb9, 0x9e, 0x60, 0xd7, 0x16, 0xe7, 0x4f, 0x2c, 0xd8, 0x0e, 0x35,
	0x89, 0x65, 0x3a, 0xd9, 0x40, 0x73, 0xc9, 0xee, 0xa9, 0x87, 0x06, 0xa9, 0x90, 0x46, 0xa7, 0xd6,
	0x73, 0xe8, 0x09, 0x61, 0xfe, 0xec, 0x3b, 0x81, 0x15, 0x3a, 0xcc, 0x13, 0x19, 0x3a, 0x53, 0xac,
	0x4b, 0x8a, 0x7a, 0x46, 0x51, 0x5f, 0x66, 0x14, 0xcd, 0x72, 0x08, 0x59, 0x41, 0xcf, 0xa4, 0xb6,
	0xc3, 0x43, 0x1a, 0x64, 0x7c, 0xe3, 0x72, 0x73, 0xd7, 0x72, 0x76, 0x59, 0x39, 0xa1, 0x28, 0x5d,
	0x68, 0x47, 0xba, 0x78, 0x5f, 0xea, 0x82, 0x40, 0xdb, 0xa4, 0xdc, 0x67, 0x1e, 0xa7, 0xe8, 0x2b,
	0xb4, 0x62, 0x1a, 0x61, 0xc4, 0x45, 0xea, 0xa6, 0x99, 0x6a, 0xe4, 0x07, 0x7c, 0x32, 0xb8, 0x28,
	0x73, 0x94, 0x03, 0x99, 0x41, 0x2f, 0xf7, 0x4b, 0x53, 0xfe, 0x81, 0x7e, 0x6e, 0x92, 0x6d, 0xd0,
	0xad, 0x08, 0x6a, 0x9b, 0x55, 0x80, 0xfc, 0x86, 0xae, 0xc1, 0x13, 0xda, 0x27, 0xec, 0x86, 0xfc,
	0x4f, 0x58, 0x49, 0xe7, 0xb4, 0xd8, 0x2f, 0xf8, 0x9c, 0x59, 0x4a, 0xb5, 0x2a, 0xf6, 0xf8, 0x0c,
	0xbe, 0x18, 0x7c, 0xaf, 0x9f, 0x72, 0x0c, 0x79, 0xd3, 0x5a, 0xb1, 0x69, 0x1f, 0x06, 0x6a, 0xa2,
	0xb7, 0x93, 0xa9, 0x9f, 0x92, 0x76, 0x60, 0x4a, 0xd3, 0x17, 0x0d, 0x3a, 0x67, 0xf1, 0xc5, 0x2f,
	0x68, 0xf0, 0xe8, 0x6c, 0x28, 0xba, 0xaa, 0x89, 0x46, 0x58, 0xdf, 0x3f, 0x85, 0xae, 0x6e, 0x0f,
	0x7f, 0xaf, 0xc5, 0x24, 0x6f, 0xf2, 0x0e, 0x5d, 0x56, 0x99, 0xa3, 0x6f, 0x6a, 0x48, 0x61, 0x47,
	0x18, 0xd7, 0x41, 0x79, 0xb2, 0x05, 0x7c, 0x2c, 0x8e, 0x07, 0x8d, 0x54, 0xef, 0xca, 0x06, 0xf0,
	0xf8, 0xb0, 0x43, 0x9e, 0xf4, 0x1f, 0xb4, 0xe4, 0x0f, 0xab, 0xbc, 0x94, 0xbf, 0xc6, 0xfd, 0x22,
	0x24, 0xfe, 0x2a, 0x8e, 0x9c, 0x25, 0xe7, 0x2e, 0x33, 0x22, 0x65, 0x0c, 0xa5, 0x2f, 0xc3, 0x03,
	0x15, 0xcc, 0x4a, 0xaf, 0x5b, 0xc2, 0xf2, 0xf7, 0x35, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x92, 0x21,
	0x86, 0x80, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	IsEmailRegistered(ctx context.Context, in *IsEmailRequest, opts ...grpc.CallOption) (*IsEmailResponse, error)
	IsUserRegistered(ctx context.Context, in *IsUserRequest, opts ...grpc.CallOption) (*IsUserResponse, error)
	IsRegistered(ctx context.Context, in *IsRegisteredRequest, opts ...grpc.CallOption) (*IsRegisteredResponse, error)
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*Token, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Response, error)
}

type authServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthServiceClient(cc grpc.ClientConnInterface) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) IsEmailRegistered(ctx context.Context, in *IsEmailRequest, opts ...grpc.CallOption) (*IsEmailResponse, error) {
	out := new(IsEmailResponse)
	err := c.cc.Invoke(ctx, "/auth_proto.AuthService/IsEmailRegistered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) IsUserRegistered(ctx context.Context, in *IsUserRequest, opts ...grpc.CallOption) (*IsUserResponse, error) {
	out := new(IsUserResponse)
	err := c.cc.Invoke(ctx, "/auth_proto.AuthService/IsUserRegistered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) IsRegistered(ctx context.Context, in *IsRegisteredRequest, opts ...grpc.CallOption) (*IsRegisteredResponse, error) {
	out := new(IsRegisteredResponse)
	err := c.cc.Invoke(ctx, "/auth_proto.AuthService/IsRegistered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/auth_proto.AuthService/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/auth_proto.AuthService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	IsEmailRegistered(context.Context, *IsEmailRequest) (*IsEmailResponse, error)
	IsUserRegistered(context.Context, *IsUserRequest) (*IsUserResponse, error)
	IsRegistered(context.Context, *IsRegisteredRequest) (*IsRegisteredResponse, error)
	SignIn(context.Context, *SignInRequest) (*Token, error)
	Register(context.Context, *RegisterRequest) (*Response, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) IsEmailRegistered(ctx context.Context, req *IsEmailRequest) (*IsEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsEmailRegistered not implemented")
}
func (*UnimplementedAuthServiceServer) IsUserRegistered(ctx context.Context, req *IsUserRequest) (*IsUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsUserRegistered not implemented")
}
func (*UnimplementedAuthServiceServer) IsRegistered(ctx context.Context, req *IsRegisteredRequest) (*IsRegisteredResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsRegistered not implemented")
}
func (*UnimplementedAuthServiceServer) SignIn(ctx context.Context, req *SignInRequest) (*Token, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}
func (*UnimplementedAuthServiceServer) Register(ctx context.Context, req *RegisterRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_IsEmailRegistered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).IsEmailRegistered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_proto.AuthService/IsEmailRegistered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).IsEmailRegistered(ctx, req.(*IsEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_IsUserRegistered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).IsUserRegistered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_proto.AuthService/IsUserRegistered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).IsUserRegistered(ctx, req.(*IsUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_IsRegistered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsRegisteredRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).IsRegistered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_proto.AuthService/IsRegistered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).IsRegistered(ctx, req.(*IsRegisteredRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_proto.AuthService/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth_proto.AuthService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth_proto.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsEmailRegistered",
			Handler:    _AuthService_IsEmailRegistered_Handler,
		},
		{
			MethodName: "IsUserRegistered",
			Handler:    _AuthService_IsUserRegistered_Handler,
		},
		{
			MethodName: "IsRegistered",
			Handler:    _AuthService_IsRegistered_Handler,
		},
		{
			MethodName: "SignIn",
			Handler:    _AuthService_SignIn_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _AuthService_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
